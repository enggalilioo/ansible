Prepare RHEL (dev1) machine
===========================
- docker run --name dev1 -p 2525:22 -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged -d abdennour/rhel:8-ssh
- ssh -i id_rsa ansibleuser@localhost -p 2525 || docker exec -it dev1 bash
- $ yum install sudo
- $ adduser ansibleuser
- $ mkdir /home/ansibleuser/.ssh
- $ vi authorized_keys    => add public key for my user
- vi /etc/sudoers.d/ansibleuser
- ansibleuser ALL=(ALL:ALL) NOPASSWD:ALL    => Allow ansibleuser to run as root without password ask
- ansible dev1 -m ping


Prepare ubuntu (dev2) machine
=============================
- docker run --rm --name dev2 -p 2524:22 -d enggalilioo/ubuntu:ansible1.0
- ssh -i id_rsa ansibleuser@localhost -p 2524 || docker exec -it dev2 bash
- $ service ssh restart => in case ssh service was not responding
- ansible dev2 -m ping
- 


Install Ansible on Mac
=======================
- curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
- sudo python3 get-pip.py
- sudo pip3 install ansible --upgrade



Run Ansible Commands
=====================
- ansible-playbook playbook.yaml -vv
- ansible dev1 -m file -a 'path=/tmp/data state=directory'
- ansible-inventory --host dev1     => list all host vars
- ansible-vault encrypt vars/users.yaml => encrypt all content of file using masterkey from key.txt
- ansible-vault view vars/users.yaml    => the only way to view the content of decrypted file
- ansible-galaxy install abdennour.bootstrap || ansible-galaxy install -r requirements.yaml     => second way more recommended
- ansible-playbook playbooks/PLAYBOOK_NAME.yml --limit "host1"   ==> limit target hosts to only host
- 


Ansible Defaults
================
- Ad-hoc command if you not pass any module using -m, so default is command module
- You can specify user name at the command or add it to ansible.cfg as a common variable
- 




Info
=====
my-container ansible_connection=docker  => be used to use docker with ansible